// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cart/client/errors/Value.proto

package cart.client.errors;

/**
 * Protobuf enum {@code cart.client.errors.Value}
 */
public enum Value
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>INIT = 0;</code>
   */
  INIT(0),
  /**
   * <code>VALID = 1;</code>
   */
  VALID(1),
  /**
   * <code>NOT_AVAILABLE_PE = 2;</code>
   */
  NOT_AVAILABLE_PE(2),
  /**
   * <code>INACTIVE_LISTING = 3;</code>
   */
  INACTIVE_LISTING(3),
  /**
   * <code>NOT_AVAILABLE_CMS = 4;</code>
   */
  NOT_AVAILABLE_CMS(4),
  /**
   * <code>ITEM_OBSOLETE = 5;</code>
   */
  ITEM_OBSOLETE(5),
  /**
   * <code>ITEM_FILTERED = 6;</code>
   */
  ITEM_FILTERED(6),
  /**
   * <code>ALREADY_PRESENT = 7;</code>
   */
  ALREADY_PRESENT(7),
  /**
   * <code>OUT_OF_STOCK = 8;</code>
   */
  OUT_OF_STOCK(8),
  /**
   * <code>QUANTITY_REVISED = 9;</code>
   */
  QUANTITY_REVISED(9),
  /**
   * <code>QUANTITY_REVISED_PE = 10;</code>
   */
  QUANTITY_REVISED_PE(10),
  /**
   * <code>QUANTITY_REVISED_PRODUCT_SERVICE = 11;</code>
   */
  QUANTITY_REVISED_PRODUCT_SERVICE(11),
  /**
   * <code>NOT_SERVICEABLE = 12;</code>
   */
  NOT_SERVICEABLE(12),
  /**
   * <code>CREATE_EXC = 13;</code>
   */
  CREATE_EXC(13),
  /**
   * <code>UPDATE_EXC = 14;</code>
   */
  UPDATE_EXC(14),
  /**
   * <code>INSERT_EXC = 15;</code>
   */
  INSERT_EXC(15),
  /**
   * <code>SELECT_EXC = 16;</code>
   */
  SELECT_EXC(16),
  /**
   * <code>VERSION_SELECT = 17;</code>
   */
  VERSION_SELECT(17),
  /**
   * <code>CAS_MISMATCH = 18;</code>
   */
  CAS_MISMATCH(18),
  /**
   * <code>DELETE_EXC = 19;</code>
   */
  DELETE_EXC(19),
  /**
   * <code>NO_KEY_FOUND = 20;</code>
   */
  NO_KEY_FOUND(20),
  /**
   * <code>DUPLICATE_KEY = 21;</code>
   */
  DUPLICATE_KEY(21),
  /**
   * <code>RESOLVE_FROM_ID_EXC = 22;</code>
   */
  RESOLVE_FROM_ID_EXC(22),
  /**
   * <code>RESOLVE_FROM_META_EXC = 23;</code>
   */
  RESOLVE_FROM_META_EXC(23),
  /**
   * <code>NO_PROFILE_FOUND = 24;</code>
   */
  NO_PROFILE_FOUND(24),
  /**
   * <code>NO_PROFILE_ID_FOUND = 25;</code>
   */
  NO_PROFILE_ID_FOUND(25),
  /**
   * <code>TRANSACTION_FAILED = 26;</code>
   */
  TRANSACTION_FAILED(26),
  /**
   * <code>DEFAULT_ACTION_RESOLVER_NOT_SET = 27;</code>
   */
  DEFAULT_ACTION_RESOLVER_NOT_SET(27),
  /**
   * <code>RESOLVER_NOT_SET = 28;</code>
   */
  RESOLVER_NOT_SET(28),
  /**
   * <code>IMPLEMENTATION_NOT_FOUND = 29;</code>
   */
  IMPLEMENTATION_NOT_FOUND(29),
  /**
   * <code>NOT_PRESENT_FOR_UPDATE = 30;</code>
   */
  NOT_PRESENT_FOR_UPDATE(30),
  /**
   * <code>NOT_PRESENT_FOR_DELETE = 31;</code>
   */
  NOT_PRESENT_FOR_DELETE(31),
  /**
   * <code>INVALID_ITEMID = 32;</code>
   */
  INVALID_ITEMID(32),
  /**
   * <code>QUANTITY_REVISED_PREDEFINED_SOURCE = 33;</code>
   */
  QUANTITY_REVISED_PREDEFINED_SOURCE(33),
  /**
   * <code>ITEM_IS_FREE = 34;</code>
   */
  ITEM_IS_FREE(34),
  /**
   * <code>SHARD_NOT_FOUND = 35;</code>
   */
  SHARD_NOT_FOUND(35),
  /**
   * <code>CANNOT_RESOLVE_SHARD = 36;</code>
   */
  CANNOT_RESOLVE_SHARD(36),
  /**
   * <code>ITEM_NOT_IN_PE_RESPONSE = 37;</code>
   */
  ITEM_NOT_IN_PE_RESPONSE(37),
  /**
   * <code>CART_ITEM_SIZE_EXCEEDED = 38;</code>
   */
  CART_ITEM_SIZE_EXCEEDED(38),
  /**
   * <code>ITEM_WITH_RESTRICTED_QTY = 39;</code>
   */
  ITEM_WITH_RESTRICTED_QTY(39),
  /**
   * <code>DATA_STORE_RESOLUTION_FAILED = 40;</code>
   */
  DATA_STORE_RESOLUTION_FAILED(40),
  /**
   * <code>REQUEST_RESOLUTION_FAILED = 41;</code>
   */
  REQUEST_RESOLUTION_FAILED(41),
  /**
   * <code>INVALID_REQUEST = 42;</code>
   */
  INVALID_REQUEST(42),
  /**
   * <code>TIER_NOT_FOUND = 43;</code>
   */
  TIER_NOT_FOUND(43),
  /**
   * <code>TIER_UPDATED = 44;</code>
   */
  TIER_UPDATED(44),
  /**
   * <code>GIFTWRAP_NOT_AVAILABLE = 45;</code>
   */
  GIFTWRAP_NOT_AVAILABLE(45),
  /**
   * <code>GIFTWRAP_INFO_UPDATED = 46;</code>
   */
  GIFTWRAP_INFO_UPDATED(46),
  /**
   * <code>NOT_LIVE_LISTING = 47;</code>
   */
  NOT_LIVE_LISTING(47),
  /**
   * <code>INSUFFICIENT_INFO_LISTING = 48;</code>
   */
  INSUFFICIENT_INFO_LISTING(48),
  /**
   * <code>CONVERT_VALIDATION_EXCEPTION = 49;</code>
   */
  CONVERT_VALIDATION_EXCEPTION(49),
  /**
   * <code>TASK_HANDLER_FAILURE = 50;</code>
   */
  TASK_HANDLER_FAILURE(50),
  /**
   * <code>CART_SERVICE_EXCEPTION = 51;</code>
   */
  CART_SERVICE_EXCEPTION(51),
  /**
   * <code>CART_PERSISTENCE_EXCEPTION = 52;</code>
   */
  CART_PERSISTENCE_EXCEPTION(52),
  /**
   * <code>JSON_EXCEPTION = 53;</code>
   */
  JSON_EXCEPTION(53),
  /**
   * <code>INVALID_ENTITY_EXCEPTION = 54;</code>
   */
  INVALID_ENTITY_EXCEPTION(54),
  /**
   * <code>CART_RUNTIME_EXCEPTION = 55;</code>
   */
  CART_RUNTIME_EXCEPTION(55),
  /**
   * <code>CONFIG_EXCEPTION = 56;</code>
   */
  CONFIG_EXCEPTION(56),
  /**
   * <code>COMPRESSION_FAILED = 57;</code>
   */
  COMPRESSION_FAILED(57),
  /**
   * <code>DECOMPRESSION_FAILED = 58;</code>
   */
  DECOMPRESSION_FAILED(58),
  /**
   * <code>METADATA_UPDATE_FAILED = 59;</code>
   */
  METADATA_UPDATE_FAILED(59),
  /**
   * <code>METADATA_UPDATED = 60;</code>
   */
  METADATA_UPDATED(60),
  /**
   * <code>METADATA_NOT_VALID = 61;</code>
   */
  METADATA_NOT_VALID(61),
  /**
   * <code>ROLLBACK_RESERVATION_FAILED = 62;</code>
   */
  ROLLBACK_RESERVATION_FAILED(62),
  /**
   * <code>ITEM_WAITLISTED = 63;</code>
   */
  ITEM_WAITLISTED(63),
  /**
   * <code>NOT_RESERVABLE = 64;</code>
   */
  NOT_RESERVABLE(64),
  /**
   * <code>WAITLIST_AVAILABLE = 65;</code>
   */
  WAITLIST_AVAILABLE(65),
  /**
   * <code>RESERVATION_EXPIRED = 66;</code>
   */
  RESERVATION_EXPIRED(66),
  /**
   * <code>INSUFFICIENT_INFO_PRICING = 67;</code>
   */
  INSUFFICIENT_INFO_PRICING(67),
  /**
   * <code>CHANNEL_BASED_RESTRICTION = 68;</code>
   */
  CHANNEL_BASED_RESTRICTION(68),
  /**
   * <code>PINCODE_NOT_RESERVABLE = 69;</code>
   */
  PINCODE_NOT_RESERVABLE(69),
  /**
   * <code>CHILD_RELATIONSHIP_NOT_VALID = 70;</code>
   */
  CHILD_RELATIONSHIP_NOT_VALID(70),
  /**
   * <code>NOT_INDEPENDENT_SELLABLE = 71;</code>
   */
  NOT_INDEPENDENT_SELLABLE(71),
  /**
   * <code>NOT_VALID_FOR_UPDATE = 72;</code>
   */
  NOT_VALID_FOR_UPDATE(72),
  /**
   * <code>PRESENT_IN_ANOTHER_PARENT = 73;</code>
   */
  PRESENT_IN_ANOTHER_PARENT(73),
  /**
   * <code>QUANTITY_REVISED_PARENT_CHILD = 74;</code>
   */
  QUANTITY_REVISED_PARENT_CHILD(74),
  /**
   * <code>PARENT_NOT_VALID = 75;</code>
   */
  PARENT_NOT_VALID(75),
  /**
   * <code>PARENT_NOT_SERVICABLE = 76;</code>
   */
  PARENT_NOT_SERVICABLE(76),
  /**
   * <code>IS_INDEPENDENT_SELLABLE = 77;</code>
   */
  IS_INDEPENDENT_SELLABLE(77),
  /**
   * <code>PARENT_DOES_NOT_EXIST = 78;</code>
   */
  PARENT_DOES_NOT_EXIST(78),
  /**
   * <code>PARENT_ITEM_NOT_IN_PE_RESPONSE = 79;</code>
   */
  PARENT_ITEM_NOT_IN_PE_RESPONSE(79),
  /**
   * <code>SHIELD_RESTRICTED_ITEM = 80;</code>
   */
  SHIELD_RESTRICTED_ITEM(80),
  /**
   * <code>QUANTITY_REVISED_SHIELD = 81;</code>
   */
  QUANTITY_REVISED_SHIELD(81),
  /**
   * <code>NOT_ELIGIBLE_FOR_SALE = 82;</code>
   */
  NOT_ELIGIBLE_FOR_SALE(82),
  /**
   * <code>RESERVATION_NOT_VALID = 83;</code>
   */
  RESERVATION_NOT_VALID(83),
  /**
   * <code>MIGRATION_NOT_ALLOWED = 84;</code>
   */
  MIGRATION_NOT_ALLOWED(84),
  /**
   * <code>WAITLISTING_FAILED = 85;</code>
   */
  WAITLISTING_FAILED(85),
  /**
   * <code>ITEM_ALLOTTED = 86;</code>
   */
  ITEM_ALLOTTED(86),
  /**
   * <code>ITEM_NOT_ALLOTTED = 87;</code>
   */
  ITEM_NOT_ALLOTTED(87),
  /**
   * <code>RESERVATION_REQUIRED = 88;</code>
   */
  RESERVATION_REQUIRED(88),
  /**
   * <code>NOT_AVAILABLE_SANTA = 89;</code>
   */
  NOT_AVAILABLE_SANTA(89),
  /**
   * <code>ZULU_MARKETPLACE_CHANGED = 90;</code>
   */
  ZULU_MARKETPLACE_CHANGED(90),
  /**
   * <code>MARKETPLACE_NOT_ALLOWED = 91;</code>
   */
  MARKETPLACE_NOT_ALLOWED(91),
  /**
   * <code>RESERVATION_ALREADY_AVAILED = 92;</code>
   */
  RESERVATION_ALREADY_AVAILED(92),
  /**
   * <code>NOT_RESERVABLE_PINCODE = 93;</code>
   */
  NOT_RESERVABLE_PINCODE(93),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>INIT = 0;</code>
   */
  public static final int INIT_VALUE = 0;
  /**
   * <code>VALID = 1;</code>
   */
  public static final int VALID_VALUE = 1;
  /**
   * <code>NOT_AVAILABLE_PE = 2;</code>
   */
  public static final int NOT_AVAILABLE_PE_VALUE = 2;
  /**
   * <code>INACTIVE_LISTING = 3;</code>
   */
  public static final int INACTIVE_LISTING_VALUE = 3;
  /**
   * <code>NOT_AVAILABLE_CMS = 4;</code>
   */
  public static final int NOT_AVAILABLE_CMS_VALUE = 4;
  /**
   * <code>ITEM_OBSOLETE = 5;</code>
   */
  public static final int ITEM_OBSOLETE_VALUE = 5;
  /**
   * <code>ITEM_FILTERED = 6;</code>
   */
  public static final int ITEM_FILTERED_VALUE = 6;
  /**
   * <code>ALREADY_PRESENT = 7;</code>
   */
  public static final int ALREADY_PRESENT_VALUE = 7;
  /**
   * <code>OUT_OF_STOCK = 8;</code>
   */
  public static final int OUT_OF_STOCK_VALUE = 8;
  /**
   * <code>QUANTITY_REVISED = 9;</code>
   */
  public static final int QUANTITY_REVISED_VALUE = 9;
  /**
   * <code>QUANTITY_REVISED_PE = 10;</code>
   */
  public static final int QUANTITY_REVISED_PE_VALUE = 10;
  /**
   * <code>QUANTITY_REVISED_PRODUCT_SERVICE = 11;</code>
   */
  public static final int QUANTITY_REVISED_PRODUCT_SERVICE_VALUE = 11;
  /**
   * <code>NOT_SERVICEABLE = 12;</code>
   */
  public static final int NOT_SERVICEABLE_VALUE = 12;
  /**
   * <code>CREATE_EXC = 13;</code>
   */
  public static final int CREATE_EXC_VALUE = 13;
  /**
   * <code>UPDATE_EXC = 14;</code>
   */
  public static final int UPDATE_EXC_VALUE = 14;
  /**
   * <code>INSERT_EXC = 15;</code>
   */
  public static final int INSERT_EXC_VALUE = 15;
  /**
   * <code>SELECT_EXC = 16;</code>
   */
  public static final int SELECT_EXC_VALUE = 16;
  /**
   * <code>VERSION_SELECT = 17;</code>
   */
  public static final int VERSION_SELECT_VALUE = 17;
  /**
   * <code>CAS_MISMATCH = 18;</code>
   */
  public static final int CAS_MISMATCH_VALUE = 18;
  /**
   * <code>DELETE_EXC = 19;</code>
   */
  public static final int DELETE_EXC_VALUE = 19;
  /**
   * <code>NO_KEY_FOUND = 20;</code>
   */
  public static final int NO_KEY_FOUND_VALUE = 20;
  /**
   * <code>DUPLICATE_KEY = 21;</code>
   */
  public static final int DUPLICATE_KEY_VALUE = 21;
  /**
   * <code>RESOLVE_FROM_ID_EXC = 22;</code>
   */
  public static final int RESOLVE_FROM_ID_EXC_VALUE = 22;
  /**
   * <code>RESOLVE_FROM_META_EXC = 23;</code>
   */
  public static final int RESOLVE_FROM_META_EXC_VALUE = 23;
  /**
   * <code>NO_PROFILE_FOUND = 24;</code>
   */
  public static final int NO_PROFILE_FOUND_VALUE = 24;
  /**
   * <code>NO_PROFILE_ID_FOUND = 25;</code>
   */
  public static final int NO_PROFILE_ID_FOUND_VALUE = 25;
  /**
   * <code>TRANSACTION_FAILED = 26;</code>
   */
  public static final int TRANSACTION_FAILED_VALUE = 26;
  /**
   * <code>DEFAULT_ACTION_RESOLVER_NOT_SET = 27;</code>
   */
  public static final int DEFAULT_ACTION_RESOLVER_NOT_SET_VALUE = 27;
  /**
   * <code>RESOLVER_NOT_SET = 28;</code>
   */
  public static final int RESOLVER_NOT_SET_VALUE = 28;
  /**
   * <code>IMPLEMENTATION_NOT_FOUND = 29;</code>
   */
  public static final int IMPLEMENTATION_NOT_FOUND_VALUE = 29;
  /**
   * <code>NOT_PRESENT_FOR_UPDATE = 30;</code>
   */
  public static final int NOT_PRESENT_FOR_UPDATE_VALUE = 30;
  /**
   * <code>NOT_PRESENT_FOR_DELETE = 31;</code>
   */
  public static final int NOT_PRESENT_FOR_DELETE_VALUE = 31;
  /**
   * <code>INVALID_ITEMID = 32;</code>
   */
  public static final int INVALID_ITEMID_VALUE = 32;
  /**
   * <code>QUANTITY_REVISED_PREDEFINED_SOURCE = 33;</code>
   */
  public static final int QUANTITY_REVISED_PREDEFINED_SOURCE_VALUE = 33;
  /**
   * <code>ITEM_IS_FREE = 34;</code>
   */
  public static final int ITEM_IS_FREE_VALUE = 34;
  /**
   * <code>SHARD_NOT_FOUND = 35;</code>
   */
  public static final int SHARD_NOT_FOUND_VALUE = 35;
  /**
   * <code>CANNOT_RESOLVE_SHARD = 36;</code>
   */
  public static final int CANNOT_RESOLVE_SHARD_VALUE = 36;
  /**
   * <code>ITEM_NOT_IN_PE_RESPONSE = 37;</code>
   */
  public static final int ITEM_NOT_IN_PE_RESPONSE_VALUE = 37;
  /**
   * <code>CART_ITEM_SIZE_EXCEEDED = 38;</code>
   */
  public static final int CART_ITEM_SIZE_EXCEEDED_VALUE = 38;
  /**
   * <code>ITEM_WITH_RESTRICTED_QTY = 39;</code>
   */
  public static final int ITEM_WITH_RESTRICTED_QTY_VALUE = 39;
  /**
   * <code>DATA_STORE_RESOLUTION_FAILED = 40;</code>
   */
  public static final int DATA_STORE_RESOLUTION_FAILED_VALUE = 40;
  /**
   * <code>REQUEST_RESOLUTION_FAILED = 41;</code>
   */
  public static final int REQUEST_RESOLUTION_FAILED_VALUE = 41;
  /**
   * <code>INVALID_REQUEST = 42;</code>
   */
  public static final int INVALID_REQUEST_VALUE = 42;
  /**
   * <code>TIER_NOT_FOUND = 43;</code>
   */
  public static final int TIER_NOT_FOUND_VALUE = 43;
  /**
   * <code>TIER_UPDATED = 44;</code>
   */
  public static final int TIER_UPDATED_VALUE = 44;
  /**
   * <code>GIFTWRAP_NOT_AVAILABLE = 45;</code>
   */
  public static final int GIFTWRAP_NOT_AVAILABLE_VALUE = 45;
  /**
   * <code>GIFTWRAP_INFO_UPDATED = 46;</code>
   */
  public static final int GIFTWRAP_INFO_UPDATED_VALUE = 46;
  /**
   * <code>NOT_LIVE_LISTING = 47;</code>
   */
  public static final int NOT_LIVE_LISTING_VALUE = 47;
  /**
   * <code>INSUFFICIENT_INFO_LISTING = 48;</code>
   */
  public static final int INSUFFICIENT_INFO_LISTING_VALUE = 48;
  /**
   * <code>CONVERT_VALIDATION_EXCEPTION = 49;</code>
   */
  public static final int CONVERT_VALIDATION_EXCEPTION_VALUE = 49;
  /**
   * <code>TASK_HANDLER_FAILURE = 50;</code>
   */
  public static final int TASK_HANDLER_FAILURE_VALUE = 50;
  /**
   * <code>CART_SERVICE_EXCEPTION = 51;</code>
   */
  public static final int CART_SERVICE_EXCEPTION_VALUE = 51;
  /**
   * <code>CART_PERSISTENCE_EXCEPTION = 52;</code>
   */
  public static final int CART_PERSISTENCE_EXCEPTION_VALUE = 52;
  /**
   * <code>JSON_EXCEPTION = 53;</code>
   */
  public static final int JSON_EXCEPTION_VALUE = 53;
  /**
   * <code>INVALID_ENTITY_EXCEPTION = 54;</code>
   */
  public static final int INVALID_ENTITY_EXCEPTION_VALUE = 54;
  /**
   * <code>CART_RUNTIME_EXCEPTION = 55;</code>
   */
  public static final int CART_RUNTIME_EXCEPTION_VALUE = 55;
  /**
   * <code>CONFIG_EXCEPTION = 56;</code>
   */
  public static final int CONFIG_EXCEPTION_VALUE = 56;
  /**
   * <code>COMPRESSION_FAILED = 57;</code>
   */
  public static final int COMPRESSION_FAILED_VALUE = 57;
  /**
   * <code>DECOMPRESSION_FAILED = 58;</code>
   */
  public static final int DECOMPRESSION_FAILED_VALUE = 58;
  /**
   * <code>METADATA_UPDATE_FAILED = 59;</code>
   */
  public static final int METADATA_UPDATE_FAILED_VALUE = 59;
  /**
   * <code>METADATA_UPDATED = 60;</code>
   */
  public static final int METADATA_UPDATED_VALUE = 60;
  /**
   * <code>METADATA_NOT_VALID = 61;</code>
   */
  public static final int METADATA_NOT_VALID_VALUE = 61;
  /**
   * <code>ROLLBACK_RESERVATION_FAILED = 62;</code>
   */
  public static final int ROLLBACK_RESERVATION_FAILED_VALUE = 62;
  /**
   * <code>ITEM_WAITLISTED = 63;</code>
   */
  public static final int ITEM_WAITLISTED_VALUE = 63;
  /**
   * <code>NOT_RESERVABLE = 64;</code>
   */
  public static final int NOT_RESERVABLE_VALUE = 64;
  /**
   * <code>WAITLIST_AVAILABLE = 65;</code>
   */
  public static final int WAITLIST_AVAILABLE_VALUE = 65;
  /**
   * <code>RESERVATION_EXPIRED = 66;</code>
   */
  public static final int RESERVATION_EXPIRED_VALUE = 66;
  /**
   * <code>INSUFFICIENT_INFO_PRICING = 67;</code>
   */
  public static final int INSUFFICIENT_INFO_PRICING_VALUE = 67;
  /**
   * <code>CHANNEL_BASED_RESTRICTION = 68;</code>
   */
  public static final int CHANNEL_BASED_RESTRICTION_VALUE = 68;
  /**
   * <code>PINCODE_NOT_RESERVABLE = 69;</code>
   */
  public static final int PINCODE_NOT_RESERVABLE_VALUE = 69;
  /**
   * <code>CHILD_RELATIONSHIP_NOT_VALID = 70;</code>
   */
  public static final int CHILD_RELATIONSHIP_NOT_VALID_VALUE = 70;
  /**
   * <code>NOT_INDEPENDENT_SELLABLE = 71;</code>
   */
  public static final int NOT_INDEPENDENT_SELLABLE_VALUE = 71;
  /**
   * <code>NOT_VALID_FOR_UPDATE = 72;</code>
   */
  public static final int NOT_VALID_FOR_UPDATE_VALUE = 72;
  /**
   * <code>PRESENT_IN_ANOTHER_PARENT = 73;</code>
   */
  public static final int PRESENT_IN_ANOTHER_PARENT_VALUE = 73;
  /**
   * <code>QUANTITY_REVISED_PARENT_CHILD = 74;</code>
   */
  public static final int QUANTITY_REVISED_PARENT_CHILD_VALUE = 74;
  /**
   * <code>PARENT_NOT_VALID = 75;</code>
   */
  public static final int PARENT_NOT_VALID_VALUE = 75;
  /**
   * <code>PARENT_NOT_SERVICABLE = 76;</code>
   */
  public static final int PARENT_NOT_SERVICABLE_VALUE = 76;
  /**
   * <code>IS_INDEPENDENT_SELLABLE = 77;</code>
   */
  public static final int IS_INDEPENDENT_SELLABLE_VALUE = 77;
  /**
   * <code>PARENT_DOES_NOT_EXIST = 78;</code>
   */
  public static final int PARENT_DOES_NOT_EXIST_VALUE = 78;
  /**
   * <code>PARENT_ITEM_NOT_IN_PE_RESPONSE = 79;</code>
   */
  public static final int PARENT_ITEM_NOT_IN_PE_RESPONSE_VALUE = 79;
  /**
   * <code>SHIELD_RESTRICTED_ITEM = 80;</code>
   */
  public static final int SHIELD_RESTRICTED_ITEM_VALUE = 80;
  /**
   * <code>QUANTITY_REVISED_SHIELD = 81;</code>
   */
  public static final int QUANTITY_REVISED_SHIELD_VALUE = 81;
  /**
   * <code>NOT_ELIGIBLE_FOR_SALE = 82;</code>
   */
  public static final int NOT_ELIGIBLE_FOR_SALE_VALUE = 82;
  /**
   * <code>RESERVATION_NOT_VALID = 83;</code>
   */
  public static final int RESERVATION_NOT_VALID_VALUE = 83;
  /**
   * <code>MIGRATION_NOT_ALLOWED = 84;</code>
   */
  public static final int MIGRATION_NOT_ALLOWED_VALUE = 84;
  /**
   * <code>WAITLISTING_FAILED = 85;</code>
   */
  public static final int WAITLISTING_FAILED_VALUE = 85;
  /**
   * <code>ITEM_ALLOTTED = 86;</code>
   */
  public static final int ITEM_ALLOTTED_VALUE = 86;
  /**
   * <code>ITEM_NOT_ALLOTTED = 87;</code>
   */
  public static final int ITEM_NOT_ALLOTTED_VALUE = 87;
  /**
   * <code>RESERVATION_REQUIRED = 88;</code>
   */
  public static final int RESERVATION_REQUIRED_VALUE = 88;
  /**
   * <code>NOT_AVAILABLE_SANTA = 89;</code>
   */
  public static final int NOT_AVAILABLE_SANTA_VALUE = 89;
  /**
   * <code>ZULU_MARKETPLACE_CHANGED = 90;</code>
   */
  public static final int ZULU_MARKETPLACE_CHANGED_VALUE = 90;
  /**
   * <code>MARKETPLACE_NOT_ALLOWED = 91;</code>
   */
  public static final int MARKETPLACE_NOT_ALLOWED_VALUE = 91;
  /**
   * <code>RESERVATION_ALREADY_AVAILED = 92;</code>
   */
  public static final int RESERVATION_ALREADY_AVAILED_VALUE = 92;
  /**
   * <code>NOT_RESERVABLE_PINCODE = 93;</code>
   */
  public static final int NOT_RESERVABLE_PINCODE_VALUE = 93;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static Value valueOf(int value) {
    return forNumber(value);
  }

  public static Value forNumber(int value) {
    switch (value) {
      case 0: return INIT;
      case 1: return VALID;
      case 2: return NOT_AVAILABLE_PE;
      case 3: return INACTIVE_LISTING;
      case 4: return NOT_AVAILABLE_CMS;
      case 5: return ITEM_OBSOLETE;
      case 6: return ITEM_FILTERED;
      case 7: return ALREADY_PRESENT;
      case 8: return OUT_OF_STOCK;
      case 9: return QUANTITY_REVISED;
      case 10: return QUANTITY_REVISED_PE;
      case 11: return QUANTITY_REVISED_PRODUCT_SERVICE;
      case 12: return NOT_SERVICEABLE;
      case 13: return CREATE_EXC;
      case 14: return UPDATE_EXC;
      case 15: return INSERT_EXC;
      case 16: return SELECT_EXC;
      case 17: return VERSION_SELECT;
      case 18: return CAS_MISMATCH;
      case 19: return DELETE_EXC;
      case 20: return NO_KEY_FOUND;
      case 21: return DUPLICATE_KEY;
      case 22: return RESOLVE_FROM_ID_EXC;
      case 23: return RESOLVE_FROM_META_EXC;
      case 24: return NO_PROFILE_FOUND;
      case 25: return NO_PROFILE_ID_FOUND;
      case 26: return TRANSACTION_FAILED;
      case 27: return DEFAULT_ACTION_RESOLVER_NOT_SET;
      case 28: return RESOLVER_NOT_SET;
      case 29: return IMPLEMENTATION_NOT_FOUND;
      case 30: return NOT_PRESENT_FOR_UPDATE;
      case 31: return NOT_PRESENT_FOR_DELETE;
      case 32: return INVALID_ITEMID;
      case 33: return QUANTITY_REVISED_PREDEFINED_SOURCE;
      case 34: return ITEM_IS_FREE;
      case 35: return SHARD_NOT_FOUND;
      case 36: return CANNOT_RESOLVE_SHARD;
      case 37: return ITEM_NOT_IN_PE_RESPONSE;
      case 38: return CART_ITEM_SIZE_EXCEEDED;
      case 39: return ITEM_WITH_RESTRICTED_QTY;
      case 40: return DATA_STORE_RESOLUTION_FAILED;
      case 41: return REQUEST_RESOLUTION_FAILED;
      case 42: return INVALID_REQUEST;
      case 43: return TIER_NOT_FOUND;
      case 44: return TIER_UPDATED;
      case 45: return GIFTWRAP_NOT_AVAILABLE;
      case 46: return GIFTWRAP_INFO_UPDATED;
      case 47: return NOT_LIVE_LISTING;
      case 48: return INSUFFICIENT_INFO_LISTING;
      case 49: return CONVERT_VALIDATION_EXCEPTION;
      case 50: return TASK_HANDLER_FAILURE;
      case 51: return CART_SERVICE_EXCEPTION;
      case 52: return CART_PERSISTENCE_EXCEPTION;
      case 53: return JSON_EXCEPTION;
      case 54: return INVALID_ENTITY_EXCEPTION;
      case 55: return CART_RUNTIME_EXCEPTION;
      case 56: return CONFIG_EXCEPTION;
      case 57: return COMPRESSION_FAILED;
      case 58: return DECOMPRESSION_FAILED;
      case 59: return METADATA_UPDATE_FAILED;
      case 60: return METADATA_UPDATED;
      case 61: return METADATA_NOT_VALID;
      case 62: return ROLLBACK_RESERVATION_FAILED;
      case 63: return ITEM_WAITLISTED;
      case 64: return NOT_RESERVABLE;
      case 65: return WAITLIST_AVAILABLE;
      case 66: return RESERVATION_EXPIRED;
      case 67: return INSUFFICIENT_INFO_PRICING;
      case 68: return CHANNEL_BASED_RESTRICTION;
      case 69: return PINCODE_NOT_RESERVABLE;
      case 70: return CHILD_RELATIONSHIP_NOT_VALID;
      case 71: return NOT_INDEPENDENT_SELLABLE;
      case 72: return NOT_VALID_FOR_UPDATE;
      case 73: return PRESENT_IN_ANOTHER_PARENT;
      case 74: return QUANTITY_REVISED_PARENT_CHILD;
      case 75: return PARENT_NOT_VALID;
      case 76: return PARENT_NOT_SERVICABLE;
      case 77: return IS_INDEPENDENT_SELLABLE;
      case 78: return PARENT_DOES_NOT_EXIST;
      case 79: return PARENT_ITEM_NOT_IN_PE_RESPONSE;
      case 80: return SHIELD_RESTRICTED_ITEM;
      case 81: return QUANTITY_REVISED_SHIELD;
      case 82: return NOT_ELIGIBLE_FOR_SALE;
      case 83: return RESERVATION_NOT_VALID;
      case 84: return MIGRATION_NOT_ALLOWED;
      case 85: return WAITLISTING_FAILED;
      case 86: return ITEM_ALLOTTED;
      case 87: return ITEM_NOT_ALLOTTED;
      case 88: return RESERVATION_REQUIRED;
      case 89: return NOT_AVAILABLE_SANTA;
      case 90: return ZULU_MARKETPLACE_CHANGED;
      case 91: return MARKETPLACE_NOT_ALLOWED;
      case 92: return RESERVATION_ALREADY_AVAILED;
      case 93: return NOT_RESERVABLE_PINCODE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<Value>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      Value> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Value>() {
          public Value findValueByNumber(int number) {
            return Value.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return cart.client.errors.ValueOuterClass.getDescriptor().getEnumTypes().get(0);
  }

  private static final Value[] VALUES = values();

  public static Value valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private Value(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:cart.client.errors.Value)
}

