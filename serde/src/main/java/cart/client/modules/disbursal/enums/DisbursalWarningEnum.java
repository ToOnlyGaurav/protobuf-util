// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cart/client/modules/disbursal/enums/DisbursalWarningEnum.proto

package cart.client.modules.disbursal.enums;

/**
 * Protobuf enum {@code cart.client.modules.disbursal.enums.DisbursalWarningEnum}
 */
public enum DisbursalWarningEnum
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>FREEBIE_NOT_SERVICABLE = 0;</code>
   */
  FREEBIE_NOT_SERVICABLE(0),
  /**
   * <code>FREEBIE_NOT_BUYABLE = 1;</code>
   */
  FREEBIE_NOT_BUYABLE(1),
  /**
   * <code>PICKUP_NOT_AVAILABLE = 2;</code>
   */
  PICKUP_NOT_AVAILABLE(2),
  /**
   * <code>ANOMALY_IN_OFFERS = 3;</code>
   */
  ANOMALY_IN_OFFERS(3),
  /**
   * <code>INVALID_PRICING_INFO = 4;</code>
   */
  INVALID_PRICING_INFO(4),
  /**
   * <code>SINGLE_PRODUCT_CHECKOUT_WARNING = 5;</code>
   */
  SINGLE_PRODUCT_CHECKOUT_WARNING(5),
  /**
   * <code>UNKNOWN_WARNING = 6;</code>
   */
  UNKNOWN_WARNING(6),
  /**
   * <code>NCE_HURDLE_BREACHED_WARNING = 7;</code>
   */
  NCE_HURDLE_BREACHED_WARNING(7),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>FREEBIE_NOT_SERVICABLE = 0;</code>
   */
  public static final int FREEBIE_NOT_SERVICABLE_VALUE = 0;
  /**
   * <code>FREEBIE_NOT_BUYABLE = 1;</code>
   */
  public static final int FREEBIE_NOT_BUYABLE_VALUE = 1;
  /**
   * <code>PICKUP_NOT_AVAILABLE = 2;</code>
   */
  public static final int PICKUP_NOT_AVAILABLE_VALUE = 2;
  /**
   * <code>ANOMALY_IN_OFFERS = 3;</code>
   */
  public static final int ANOMALY_IN_OFFERS_VALUE = 3;
  /**
   * <code>INVALID_PRICING_INFO = 4;</code>
   */
  public static final int INVALID_PRICING_INFO_VALUE = 4;
  /**
   * <code>SINGLE_PRODUCT_CHECKOUT_WARNING = 5;</code>
   */
  public static final int SINGLE_PRODUCT_CHECKOUT_WARNING_VALUE = 5;
  /**
   * <code>UNKNOWN_WARNING = 6;</code>
   */
  public static final int UNKNOWN_WARNING_VALUE = 6;
  /**
   * <code>NCE_HURDLE_BREACHED_WARNING = 7;</code>
   */
  public static final int NCE_HURDLE_BREACHED_WARNING_VALUE = 7;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static DisbursalWarningEnum valueOf(int value) {
    return forNumber(value);
  }

  public static DisbursalWarningEnum forNumber(int value) {
    switch (value) {
      case 0: return FREEBIE_NOT_SERVICABLE;
      case 1: return FREEBIE_NOT_BUYABLE;
      case 2: return PICKUP_NOT_AVAILABLE;
      case 3: return ANOMALY_IN_OFFERS;
      case 4: return INVALID_PRICING_INFO;
      case 5: return SINGLE_PRODUCT_CHECKOUT_WARNING;
      case 6: return UNKNOWN_WARNING;
      case 7: return NCE_HURDLE_BREACHED_WARNING;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<DisbursalWarningEnum>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      DisbursalWarningEnum> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<DisbursalWarningEnum>() {
          public DisbursalWarningEnum findValueByNumber(int number) {
            return DisbursalWarningEnum.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return cart.client.modules.disbursal.enums.DisbursalWarningEnumOuterClass.getDescriptor().getEnumTypes().get(0);
  }

  private static final DisbursalWarningEnum[] VALUES = values();

  public static DisbursalWarningEnum valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private DisbursalWarningEnum(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:cart.client.modules.disbursal.enums.DisbursalWarningEnum)
}

